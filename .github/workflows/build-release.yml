name: Build and Release Git with OpenSSL

on:
  push:
    tags: ['v*']

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
    steps:
      - name: Extract Git version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential fakeroot dpkg-dev \
          libcurl4-openssl-dev libssl-dev libexpat1-dev gettext \
          dh-make devscripts

      - name: Download Git source
        run: |
          wget https://mirrors.edge.kernel.org/pub/software/scm/git/git-${{ steps.version.outputs.version }}.tar.gz
          tar -zxvf git-${{ steps.version.outputs.version }}.tar.gz

      - name: Initialize Debian packaging
        working-directory: ./git-${{ steps.version.outputs.version }}
        run: dh_make --createorig -s -y -p git_${{ steps.version.outputs.version }}

      - name: Patch control for OpenSSL
        working-directory: ./git-${{ steps.version.outputs.version }}
        run: |
          sed -i 's/libcurl4-gnutls-dev/libcurl4-openssl-dev/' debian/control
          sed -i 's/^Build-Depends: /&libcurl4-openssl-dev, /' debian/control

      - name: Build .deb package
        working-directory: ./git-${{ steps.version.outputs.version }}
        run: DEB_BUILD_OPTIONS=nocheck dpkg-buildpackage -rfakeroot -b

      - name: Rename packages to include OS version
        run: |
          for f in ../git_*.deb ../git-dbgsym_*.ddeb; do
            mv "$f" "${f%.deb}-${{ matrix.os }}.deb"
          done

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            git_*-ubuntu-22.04.deb
            git-dbgsym-*-ubuntu-22.04.ddeb
            git_*-ubuntu-24.04.deb
            git-dbgsym-*-ubuntu-24.04.ddeb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
